<?php

namespace AppBundle\Repository;

use AppBundle\Entity\User;

/**
 * MessageRepository.
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class MessageRepository extends \Doctrine\ORM\EntityRepository
{
    protected function getMessagesOrderedByDate()
    {
        return $this->createQueryBuilder('m')
            ->orderBy('m.createdAt', 'desc');
    }

    public function findByOrderedByDate()
    {
        return $this->getMessagesOrderedByDate()
            ->getQuery()->getResult();
    }

    public function findByParentAndUser($userId, $parentId)
    {
        return $this->createQueryBuilder('m')
            ->where('m.user = :userId')->setParameter('userId', $userId)
            ->andWhere('m.parent = :parentId')->setParameter('parentId', $parentId)
            ->getQuery()->getResult();
    }

    /**
     * @param string $terms
     *
     * @return Message
     */
    public function findBySearchTermsAndByUser($terms, $user)
    {
        $qb = $this->createQueryBuilder('m')
            ->where('m.content LIKE :content')->setParameter('content', '%'.$terms.'%');

        // On filtre sur un user particulier
        if ([] != $user) {
            $qb->andWhere('m.user = :user')->setParameter('user', $user[0]);
        }

        return $qb->getQuery()->getResult();
    }

    /**
     * Get the messages filtered by user.
     *
     * @param User $user user
     *
     * @return Message
     */
    public function findByOrderedByDateAndByUser(User $user)
    {
        return $this->getMessagesOrderedByDate()
            ->andWhere('m.user = :user')->setParameter('user', $user)
            ->getQuery()->getResult();
    }

    public function getMessageById($id){
        return $this->createQueryBuilder('m')
            ->where('m.id = :idMessage')->setParameter('idMessage' , $id)
            ->getQuery()->getResult();
    }
}
